Turbo Assembler	 Version 4.1	    02/13/24 23:34:11	    Page 1
prog.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .286
      4				     org 100h
      5
      6	0100			     Start:
      7	0100  1E				 push ds
      8	0101  07				 pop es
      9
     10						 COMMENT #
     11						 ; ==============
     12						 ; strlen test
     13						 mov di, offset	X
     14						 call Strlen
     15						 call PrnW
     16						 #
     17
     18						 COMMENT #
     19						 ; ==============
     20						 ; memchr test
     21						 mov di, offset	X
     22						 mov cx, 2d
     23						 mov al, 's'
     24						 call MemChr
     25
     26
     27						 ; print found or not
     28						 ; and which letter is pointed by DI
     29						 mov al, es:[di]
     30						 call PrnW
     31						 #
     32
     33						 ; ==============
     34						 ; memset test
     35	0102  BF 0119r				 mov di, offset	X
     36	0105  B9 0006				 mov cx, 6d
     37	0108  B0 41				 mov al, 'A'
     38	010A  E8 006A				 call MemSet
     39
     40	010D  BA 0119r				 mov dx, offset	X
     41	0110  B4 09				 mov ah, 09h
     42	0112  CD 21				 int 21h
     43
     44						 ; ==============
     45						 ; end
     46	0114  B8 4C13				 mov ax, 4c13h
     47	0117  CD 21				 int 21h
     48
     49	0119  74 65 73 74 54 45	53+  X db 'testTESTtest$'
     50	      54 74 65 73 74 24
     51
     52				     include prnw.asm
1    53				     ;-------------------------------------------
1    54				     ; PrnW
1    55				     ; Description:
1    56				     ;	 Prints	to standart output AX
1    57				     ;	 in hex	(using int 21h (02h))
Turbo Assembler	 Version 4.1	    02/13/24 23:34:11	    Page 2
prog.asm



1    58				     ; DESTROYS:
1    59				     ;	 CX, DX
1    60				     ;-------------------------------------------
1    61	0126			     PrnW	 proc
1    62
1    63	0126  BE 0003				 mov si, 3h	     ; starting	from smallest bytes,
1    64								     ; which are in the	rightmost character
1    65
1    66						 ; loop	start
1    67	0129  B9 0004				 mov cx, 4h	     ; rotating	ax 4 times
1    68	012C  8A D0		     PrnWL:	 mov dl, al
1    69	012E  80 E2 0F				 and dl, 00001111b
1    70	0131  80 FA 0A				 cmp dl, 10d
1    71	0134  7D 05				 jge PrnWLtr
1    72
1    73	0136  80 C2 30				 add dl, '0' ; '0' ... '9'
1    74	0139  EB 06				 jmp short PrnWFin
1    75
1    76	013B  80 C2 41		     PrnWLtr:	 add dl, 'A' ; 'A' ... 'F'
1    77	013E  80 EA 0A				 sub dl, 0Ah
1    78
1    79	0141  88 94 0155r	     PrnWFin:	 mov byte ptr [PrnWData	+ si], dl
1    80	0145  C1 C8 04				 ror ax, 4
1    81	0148  4E				 dec si
1    82	0149  E2 E1				 loop PrnWL
1    83						 ; loop	end
1    84
1    85						 ; printing
1    86	014B  50				 push ax		 ; saving ax
1    87	014C  BA 0155r				 mov dx, offset	PRNWDATA
1    88	014F  B4 09				 mov ah, 09h
1    89	0151  CD 21				 int 21h
1    90	0153  58				 pop ax			 ; ressurecting	ax
1    91
1    92						 ; end
1    93	0154  C3				 ret
1    94	0155					 endp
1    95
1    96	0155  ?? ?? ?? ?? 24	     PrnWData	 db ?, ?, ?, ?,	'$'
1    97				     ;-------------------------------------------
1    98
     99
    100				     ;-------------------------------------------
    101				     ; Strlen
    102				     ; Description:
    103				     ;	 Counts	string's len.
    104				     ; Result:
    105				     ;	 In AX.
    106				     ; Assumes:
    107				     ;	 String's address is in	ES:DI. Terminating
    108				     ;	 symbol	is '$'.
    109				     ; ATTENTION:
    110				     ;	 UB if string's	len is more than a word's
    111				     ;	 max value.
    112				     ; DESTROYS:
    113				     ;	 AX, CX
    114				     ;-------------------------------------------
Turbo Assembler	 Version 4.1	    02/13/24 23:34:11	    Page 3
prog.asm



    115	015A			     Strlen	 proc
    116
    117	      =FFFF		     STRLEN_CX_DEF_VAL equ 0FFFFh
    118
    119	015A  B0 24				 mov al, '$'
    120	015C  B9 FFFF				 mov cx, STRLEN_CX_DEF_VAL
    121	015F  F2> AE				 repne scasb
    122
    123	0161  B8 FFFF				 mov ax, STRLEN_CX_DEF_VAL
    124	0164  2B C1				 sub ax, cx
    125	0166  48				 dec ax
    126
    127	0167  C3				 ret
    128	0168					 endp
    129				     ;-------------------------------------------
    130
    131				     ;-------------------------------------------
    132				     ; MemChr
    133				     ; Description:
    134				     ;	 Looks through N bytes of memory, searching
    135				     ;	 for byte with specified value.
    136				     ; Args:
    137				     ;	 - N in	CX.
    138				     ;	 - First byte of memory	to look	through	is
    139				     ;	 ES:[DI]
    140				     ;	 - Value to search is in AL.
    141				     ; Returns:
    142				     ;	 If found, AH is set to	1, ES:[DI] points
    143				     ;	 to the	found byte. If not found, AH is	set
    144				     ;	 zero.
    145				     ; DESTROYS:
    146				     ;	 CX, DI
    147				     ;-------------------------------------------
    148	0168			     MemChr	 proc
    149
    150	0168  F2> AE				 repne scasb	     ; it stops	one byte after
    151	016A  4F				 dec di		     ; returning to needed byte
    152	016B  26: 38 05				 cmp es:[di], al
    153	016E  74 04				 je short MEMCHRFND
    154	0170  B4 00				 mov ah, 0h
    155	0172  EB 02				 jmp short MemChrFin
    156	0174  B4 01		     MemChrFnd:	 mov ah, 1h
    157	0176  C3		     MemChrFin:	 ret
    158	0177					 endp
    159				     ;-------------------------------------------
    160
    161
    162				     ;-------------------------------------------
    163				     ; MemSet
    164				     ; Description:
    165				     ;	 Goes through N	bytes of memory, setting
    166				     ;	 them with specified value.
    167				     ; Args:
    168				     ;	 - N in	CX.
    169				     ;	 - First byte of memory	to go through is
    170				     ;	 ES:[DI]
    171				     ;	 - Value to set	is in AL.
Turbo Assembler	 Version 4.1	    02/13/24 23:34:11	    Page 4
prog.asm



    172				     ; DESTROYS:
    173				     ;	 CX, DI
    174				     ;-------------------------------------------
    175	0177			     MemSet	 proc
    176
    177	0177  F3> AA				 rep stosb
    178
    179	0179  C3				 ret
    180	017A					 endp
    181				     ;-------------------------------------------
    182
    183
    184				     end	 Start
Turbo Assembler	 Version 4.1	    02/13/24 23:34:11	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/13/24"
??FILENAME			  Text	 "prog	  "
??TIME				  Text	 "23:34:11"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PROG
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
MEMCHR				  Near	 DGROUP:0168
MEMCHRFIN			  Near	 DGROUP:0176
MEMCHRFND			  Near	 DGROUP:0174
MEMSET				  Near	 DGROUP:0177
PRNW				  Near	 DGROUP:0126
PRNWDATA			  Byte	 DGROUP:0155
PRNWFIN				  Near	 DGROUP:0141
PRNWL				  Near	 DGROUP:012C
PRNWLTR				  Near	 DGROUP:013B
START				  Near	 DGROUP:0100
STRLEN				  Near	 DGROUP:015A
STRLEN_CX_DEF_VAL		  Number FFFF
X				  Byte	 DGROUP:0119

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  017A Word	  Public  CODE
