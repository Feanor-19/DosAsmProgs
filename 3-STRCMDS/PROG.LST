Turbo Assembler	 Version 4.1	    02/13/24 23:55:53	    Page 1
prog.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .286
      4				     org 100h
      5
      6	0100			     Start:
      7	0100  1E				 push ds
      8	0101  07				 pop es
      9
     10						 COMMENT #
     11						 ; ==============
     12						 ; strlen test
     13						 mov di, offset	X
     14						 call Strlen
     15						 call PrnW
     16						 #
     17
     18						 COMMENT #
     19						 ; ==============
     20						 ; memchr test
     21						 mov di, offset	X
     22						 mov cx, 2d
     23						 mov al, 's'
     24						 call MemChr
     25
     26
     27						 ; print found or not
     28						 ; and which letter is pointed by DI
     29						 mov al, es:[di]
     30						 call PrnW
     31						 #
     32
     33						 COMMENT #
     34						 ; ==============
     35						 ; memset test
     36						 mov di, offset	X
     37						 mov cx, 6d
     38						 mov al, 'A'
     39						 call MemSet
     40
     41						 ; print X
     42						 mov dx, offset	X
     43						 mov ah, 09h
     44						 int 21h
     45						 #
     46
     47						 ; ==============
     48						 ; memcpy???
     49	0102  B9 0004				 mov cx, 4h
     50	0105  BE 0119r				 mov si, offset	X
     51	0108  BF 0121r				 mov di, offset	X + 8d
     52	010B  F3> A4				 rep movsb
     53
     54						 ; print X
     55	010D  BA 0119r				 mov dx, offset	X
     56	0110  B4 09				 mov ah, 09h
     57	0112  CD 21				 int 21h
Turbo Assembler	 Version 4.1	    02/13/24 23:55:53	    Page 2
prog.asm



     58
     59						 ; ==============
     60						 ; end
     61	0114  B8 4C13				 mov ax, 4c13h
     62	0117  CD 21				 int 21h
     63
     64	0119  74 65 73 74 54 45	53+  X db 'testTESTffff$'
     65	      54 66 66 66 66 24
     66
     67				     include prnw.asm
1    68				     ;-------------------------------------------
1    69				     ; PrnW
1    70				     ; Description:
1    71				     ;	 Prints	to standart output AX
1    72				     ;	 in hex	(using int 21h (02h))
1    73				     ; DESTROYS:
1    74				     ;	 CX, DX
1    75				     ;-------------------------------------------
1    76	0126			     PrnW	 proc
1    77
1    78	0126  BE 0003				 mov si, 3h	     ; starting	from smallest bytes,
1    79								     ; which are in the	rightmost character
1    80
1    81						 ; loop	start
1    82	0129  B9 0004				 mov cx, 4h	     ; rotating	ax 4 times
1    83	012C  8A D0		     PrnWL:	 mov dl, al
1    84	012E  80 E2 0F				 and dl, 00001111b
1    85	0131  80 FA 0A				 cmp dl, 10d
1    86	0134  7D 05				 jge PrnWLtr
1    87
1    88	0136  80 C2 30				 add dl, '0' ; '0' ... '9'
1    89	0139  EB 06				 jmp short PrnWFin
1    90
1    91	013B  80 C2 41		     PrnWLtr:	 add dl, 'A' ; 'A' ... 'F'
1    92	013E  80 EA 0A				 sub dl, 0Ah
1    93
1    94	0141  88 94 0155r	     PrnWFin:	 mov byte ptr [PrnWData	+ si], dl
1    95	0145  C1 C8 04				 ror ax, 4
1    96	0148  4E				 dec si
1    97	0149  E2 E1				 loop PrnWL
1    98						 ; loop	end
1    99
1   100						 ; printing
1   101	014B  50				 push ax		 ; saving ax
1   102	014C  BA 0155r				 mov dx, offset	PRNWDATA
1   103	014F  B4 09				 mov ah, 09h
1   104	0151  CD 21				 int 21h
1   105	0153  58				 pop ax			 ; ressurecting	ax
1   106
1   107						 ; end
1   108	0154  C3				 ret
1   109	0155					 endp
1   110
1   111	0155  ?? ?? ?? ?? 24	     PrnWData	 db ?, ?, ?, ?,	'$'
1   112				     ;-------------------------------------------
1   113
    114
Turbo Assembler	 Version 4.1	    02/13/24 23:55:53	    Page 3
prog.asm



    115				     ;-------------------------------------------
    116				     ; Strlen
    117				     ; Description:
    118				     ;	 Counts	string's len.
    119				     ; Result:
    120				     ;	 In AX.
    121				     ; Assumes:
    122				     ;	 String's address is in	ES:DI. Terminating
    123				     ;	 symbol	is '$'.
    124				     ; ATTENTION:
    125				     ;	 UB if string's	len is more than a word's
    126				     ;	 max value.
    127				     ; DESTROYS:
    128				     ;	 AX, CX
    129				     ;-------------------------------------------
    130	015A			     Strlen	 proc
    131
    132	      =FFFF		     STRLEN_CX_DEF_VAL equ 0FFFFh
    133
    134	015A  B0 24				 mov al, '$'
    135	015C  B9 FFFF				 mov cx, STRLEN_CX_DEF_VAL
    136	015F  F2> AE				 repne scasb
    137
    138	0161  B8 FFFF				 mov ax, STRLEN_CX_DEF_VAL
    139	0164  2B C1				 sub ax, cx
    140	0166  48				 dec ax
    141
    142	0167  C3				 ret
    143	0168					 endp
    144				     ;-------------------------------------------
    145
    146				     ;-------------------------------------------
    147				     ; MemChr
    148				     ; Description:
    149				     ;	 Looks through N bytes of memory, searching
    150				     ;	 for byte with specified value.
    151				     ; Args:
    152				     ;	 - N in	CX.
    153				     ;	 - First byte of memory	to look	through	is
    154				     ;	 ES:[DI]
    155				     ;	 - Value to search is in AL.
    156				     ; Returns:
    157				     ;	 If found, AH is set to	1, ES:[DI] points
    158				     ;	 to the	found byte. If not found, AH is	set
    159				     ;	 zero.
    160				     ; DESTROYS:
    161				     ;	 CX, DI
    162				     ;-------------------------------------------
    163	0168			     MemChr	 proc
    164
    165	0168  F2> AE				 repne scasb	     ; it stops	one byte after
    166	016A  4F				 dec di		     ; returning to needed byte
    167	016B  26: 38 05				 cmp es:[di], al
    168	016E  74 04				 je short MEMCHRFND
    169	0170  B4 00				 mov ah, 0h
    170	0172  EB 02				 jmp short MemChrFin
    171	0174  B4 01		     MemChrFnd:	 mov ah, 1h
Turbo Assembler	 Version 4.1	    02/13/24 23:55:53	    Page 4
prog.asm



    172	0176  C3		     MemChrFin:	 ret
    173	0177					 endp
    174				     ;-------------------------------------------
    175
    176
    177				     ;-------------------------------------------
    178				     ; MemSet
    179				     ; Description:
    180				     ;	 Goes through N	bytes of memory, setting
    181				     ;	 them with specified value.
    182				     ; Args:
    183				     ;	 - N in	CX.
    184				     ;	 - First byte of memory	to go through is
    185				     ;	 ES:[DI]
    186				     ;	 - Value to set	is in AL.
    187				     ; DESTROYS:
    188				     ;	 CX, DI
    189				     ;-------------------------------------------
    190	0177			     MemSet	 proc
    191
    192	0177  F3> AA				 rep stosb   ; the most	complicated func
    193
    194	0179  C3				 ret
    195	017A					 endp
    196				     ;-------------------------------------------
    197
    198
    199				     end	 Start
Turbo Assembler	 Version 4.1	    02/13/24 23:55:53	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/13/24"
??FILENAME			  Text	 "prog	  "
??TIME				  Text	 "23:55:53"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PROG
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
MEMCHR				  Near	 DGROUP:0168
MEMCHRFIN			  Near	 DGROUP:0176
MEMCHRFND			  Near	 DGROUP:0174
MEMSET				  Near	 DGROUP:0177
PRNW				  Near	 DGROUP:0126
PRNWDATA			  Byte	 DGROUP:0155
PRNWFIN				  Near	 DGROUP:0141
PRNWL				  Near	 DGROUP:012C
PRNWLTR				  Near	 DGROUP:013B
START				  Near	 DGROUP:0100
STRLEN				  Near	 DGROUP:015A
STRLEN_CX_DEF_VAL		  Number FFFF
X				  Byte	 DGROUP:0119

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  017A Word	  Public  CODE
