Turbo Assembler	 Version 4.1	    02/12/24 17:12:01	    Page 1
prog.asm



      1	0000			     .model tiny
      2	0000			     .code
      3				     .286
      4				     org 100h
      5
      6	0100			     Start:
      7	0100  BB B800				 mov bx, 0b800h
      8	0103  8E C3				 mov es, bx
      9
     10						 ;call DrawFrame
     11
     12						 ;push 0C28h  ;	row=12d, col=40d
     13						 ;push 1300h  ;	n=3; empty
     14						 ;push 6400h+''  ; S1,	01100100
     15						 ;push 6400h+''  ; S2,	01100100
     16						 ;push 6400h+''  ; S3,	01100100
     17
     18	0105  6A 0C				 push 12d	 ; row
     19	0107  6A 14				 push 20d	 ; col
     20	0109  6A 03				 push 3d	 ; N
     21	010B  68 640B				 push 6400h+''	 ; S1, 01100100
     22	010E  68 640C				 push 6400h+''	 ; S2, 01100100
     23	0111  68 640B				 push 6400h+''	 ; S3, 01100100
     24
     25	0114  E8 0005				 call DrawLine
     26
     27	0117  B8 4C13				 mov ax, 4c13h
     28	011A  CD 21				 int 21h
     29
     30				     include drhl.asm
1    31				     ;-------------------------------------------
1    32				     ; DrawLine
1    33				     ; Description:
1    34				     ;	 Draws in videomem one line in
1    35				     ;	 the following way:
1    36				     ;	 S1 S2 ... (N times) ... S2 S3
1    37				     ;	 where S1, S2 and S3 are two bytes:
1    38				     ;	 symbol	byte and attributes byte.
1    39				     ;
1    40				     ; Args (in	stack from bottom to top,
1    41				     ; EACH LINE MEANS A WORD -	TWO BYTES):
1    42				     ;	 1) Row	number of the S1 symbol
1    43				     ;	 2) Col	number of the S1 symbol
1    44				     ;	 3) N (see above), must	be > 0
1    45				     ;	 4) S1 (attribute byte,	symbol byte)
1    46				     ;	 5) S2 (attribute byte,	symbol byte)
1    47				     ;	 6) S3 (attribute byte,	symbol byte)
1    48				     ;	 7) Ret	code
1    49				     ; ATTENTION:
1    50				     ;	 ES must be already set	to 0b800h!
1    51				     ;	 All args must have sensible values,
1    52				     ;	 otherwise UB. Rows and	Cols start with
1    53				     ;	 zero.
1    54				     ; DESTROYS:
1    55				     ;	 AX, BX, CX, BP
1    56				     ;-------------------------------------------
1    57	011C			     DrawLine	 proc
Turbo Assembler	 Version 4.1	    02/12/24 17:12:01	    Page 2
prog.asm



1    58
1    59	      =000C		     ARG_ROW	 equ	 0Ch
1    60	      =000A		     ARG_COL	 equ	 0Ah
1    61	      =0008		     ARG_N	 equ	 8h
1    62	      =0006		     ARG_S1	 equ	 6h
1    63	      =0004		     ARG_S2	 equ	 4h
1    64	      =0002		     ARG_S3	 equ	 2h
1    65
1    66	011C  8B EC				 mov bp, sp
1    67
1    68						 ; ================================
1    69						 ; counting in bx address of the S1
1    70
1    71	011E  33 DB				 xor bx, bx
1    72
1    73						 ; trying to do	row*80d	in ax
1    74	0120  8B 46 0C				 mov ax, [bp + ARG_ROW]
1    75	0123  B3 50				 mov bl, 80d
1    76	0125  F6 E3				 mul bl
1    77
1    78	0127  8B D8				 mov bx, ax
1    79
1    80						 ; adding col num
1    81	0129  8B 46 0A				 mov ax, [bp + ARG_COL]
1    82	012C  03 D8				 add bx, ax
1    83
1    84						 ; bx*=2, to get real address in videomem
1    85	012E  D1 E3				 shl bx, 1
1    86
1    87						 ; ================================
1    88						 ; S1
1    89	0130  8B 46 06				 mov ax, word ptr [bp +	ARG_S1]	; ax = S1 (symbol+attrib)
1    90	0133  26: 89 07				 mov es:[bx], ax
1    91
1    92						 ; ================================
1    93						 ; S2 (N times)
1    94	0136  8B 46 04				 mov ax, [bp + ARG_S2] ; ax = S2 (symbol+attrib)
1    95
1    96	0139  33 C9				 xor cx, cx
1    97	013B  8B 4E 08				 mov cx, [bp + ARG_N] ;	cx = N
1    98	013E  83 C3 02		     DrawLineL:	 add bx, 2h
1    99	0141  26: 89 07				 mov es:[bx], ax
1   100	0144  E2 F8				 loop DrawLineL
1   101
1   102						 ; ================================
1   103						 ; S3
1   104	0146  83 C3 02				 add bx, 2h
1   105	0149  8B 46 02				 mov ax, word ptr [bp +	ARG_S3]	; ax = S3 (symbol+attrib)
1   106	014C  26: 89 07				 mov es:[bx], ax
1   107
1   108						 ; ================================
1   109						 ; end
1   110	014F  C3				 ret
1   111	0150					 endp
1   112				     ;-------------------------------------------
1   113
    114
Turbo Assembler	 Version 4.1	    02/12/24 17:12:01	    Page 3
prog.asm



    115				     ;-------------------------------------------
    116				     ; DrawFrame
    117				     ; Description:
    118				     ;	 Draws a frame in the videomem.	You can
    119				     ;	 specify its interiour width and height,
    120				     ;	 as well as which symbols will be used for
    121				     ;	 drawing. See the scheme below (each pair
    122				     ;	 of letters represents one symbol):
    123				     ;
    124				     ;	 TL HL ... HL TR _
    125				     ;	 VL IN ... IN VL   ^
    126				     ;	 .. .. ... .. ..   | Height (H>0)
    127				     ;	 VL IN ... IN VL _ v
    128				     ;	 BL HL ... HL BR
    129				     ;	    |	    |
    130				     ;	    <------->
    131				     ;	   Width (W>0)
    132				     ; Args (in	stack from bottom to top,
    133				     ; EACH LINE MEANS A WORD -	TWO BYTES):
    134				     ;	 1)  Row number	of the TL symbol
    135				     ;	 2)  Col number	of the TL symbol
    136				     ;	 3)  W
    137				     ;	 4)  H
    138				     ;	 5)  TL	(symbol)
    139				     ;	 6)  TL	(attribute)
    140				     ;	 7)  HL	(symbol)
    141				     ;	 8)  HL	(attribute)
    142				     ;	 10) TR	(symbol)
    143				     ;	 11) TR	(attribute)
    144				     ;	 12) VL	(symbol)
    145				     ;	 13) VL	(attribute)
    146				     ;	 14) IN	(symbol)
    147				     ;	 15) IN	(attribute)
    148				     ;	 15) BL	(symbol)
    149				     ;	 16) BL	(attribute)
    150				     ;	 17) BR	(symbol)
    151				     ;	 18) BR	(attribute)
    152				     ;	 19) Ret code
    153				     ; ATTENTION:
    154				     ;	 ES must be already set	to 0b800h!
    155				     ;	 All args must have sensible values,
    156				     ;	 otherwise UB. Rows and	Cols start with
    157				     ;	 zero.
    158				     ; DESTROYS:
    159				     ;	 AX, BX, CX, BP
    160				     ;-------------------------------------------
    161	0150			     DrawFrame	 proc
    162						 ; drawing top line
    163						 ; TL HL ... HL	TR
    164	0150  8B EC				 mov bp, sp
    165
    166	0152  FF 76 13				 push [bp+19d]	 ; row
    167	0155  FF 76 12				 push [bp+18d]	 ; col
    168	0158  FF 76 11				 push [bp+17d]	 ; N
    169
    170
    171	015B  C3				 ret
Turbo Assembler	 Version 4.1	    02/12/24 17:12:01	    Page 4
prog.asm



    172	015C					 endp
    173				     ;-------------------------------------------
    174				     end	 Start
Turbo Assembler	 Version 4.1	    02/12/24 17:12:01	    Page 5
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "02/12/24"
??FILENAME			  Text	 "prog	  "
??TIME				  Text	 "17:12:01"
??VERSION			  Number 040A
@32BIT				  Text	 0
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0707H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 PROG
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
ARG_COL				  Number 000A
ARG_N				  Number 0008
ARG_ROW				  Number 000C
ARG_S1				  Number 0006
ARG_S2				  Number 0004
ARG_S3				  Number 0002
DRAWFRAME			  Near	 DGROUP:0150
DRAWLINE			  Near	 DGROUP:011C
DRAWLINEL			  Near	 DGROUP:013E
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  015C Word	  Public  CODE
